version: "3"
services:
  web:
    container_name: web
    restart: always
    build: ./web/
    expose:
      - "8000"
    depends_on:
      - db_postgres
     # - redis
    env_file: .env
    environment:
      DB_HOST: db_postgres
      REDIS_HOST: redis
    volumes:
      - ./web:/data/web
      - /usr/app/node_modules
    command: ["./wait-for-it.sh", "db_postgres:5432", "--", "node", "server.js"]
    networks:
      - projetsad

  nginx:
    restart: always
    build: ./nginx/
    ports:
      - "80:80"
    volumes:
      - ./web:/data/web
    depends_on:
      - web
    networks:
      - projetsad

  db_postgres:
    restart: always
    build: ./postgres/
    #image: postgres:latest
    volumes:
      - ./postgres:/var/lib/postgresql/data
      #- ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      #- ./backups/postgresql:/backup
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres_db
    expose:
      - "5432"
    networks:
      - projetsad
  
  redis:
    restart: always
    image: redis:latest
    expose:
      - "6379"
    networks:
      - projetsad

  data:
    restart: always
    image: alpine
    volumes:
      - /var/lib/postgresql
    command: "true"
    networks:
      - projetsad

networks:
  projetsad:

